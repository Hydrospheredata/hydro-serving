name: Deploy new stand

on:
  workflow_dispatch:
    inputs:
      customer:
        description: customer-name
        required: true
      tag:
        description: Tag (3.0.3 | HEAD)
        default: HEAD
        required: false
      delete_stand:
        description: delete stand? (yes | no)
        default: 'no'
        required: false

jobs:
  prepare_stand:
    if: github.event.inputs.delete_stand == 'no'
    name: Prepare stand
    runs-on: ubuntu-20.04
    env:
      # manifest to edit
      FILE: hydro-stand/stand.yaml
      NAME: ${{ github.event.inputs.customer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Update App Name
        shell: bash
        run: |
          sed -i 's/.*"name": "example"/  "name": "${{ env.NAME }}"/g' ${{ env.FILE }}

      - name: Update App Namespace
        shell: bash
        run: |
          sed -i 's/.*"namespace": "example"/    "namespace": "${{ env.NAME }}"/g' ${{ env.FILE }}

      - name: Update App Target Revision
        shell: bash
        run: |
          sed -i 's/.*"targetRevision": "HEAD"/    "targetRevision": "${{ github.event.inputs.tag }}"/g' ${{ env.FILE }}
      
      - name: Update App's minio endpoint
        shell: bash
        run: |
          sed -i 's/.*hydro-minio.*/        "value": "hydro-minio-${{ env.NAME }}.dev.hydrosphere.io"/g' ${{ env.FILE }}
      
      - name: Update App's registry endpoint
        shell: bash
        run: |
          sed -i 's/.*hydro-registry.*/        "value": "hydro-registry-${{ env.NAME }}.dev.hydrosphere.io"/g' ${{ env.FILE }}
      
      - name: Update App's grpc endpoint
        shell: bash
        run: |
          sed -i 's/.*hydro-grpc.*/        "value": "hydro-grpc-${{ env.NAME }}.dev.hydrosphere.io"/g' ${{ env.FILE }}
          
      - name: Update App's serving endpoint
        shell: bash
        run: |
          sed -i 's/.*hydro-example.*/        "value": "hydro-${{ env.NAME }}.dev.hydrosphere.io"/g' ${{ env.FILE }}
      
      - name: Update App's toleration
        shell: bash
        run: |
          sed -i 's/        "value": "example"/        "value": "${{ env.NAME }}"/g' ${{ env.FILE }}
        
      - name: Rename App File 
        shell: bash
        run: "cp ${{ env.FILE }} hydro-stand/${{ env.NAME }}-stand.yaml"

      - name: Pushes ${{ env.NAME }} App Manifest
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.HYDRO_SERVING_TOKEN }}
        with:
          source_file: 'hydro-stand/${{ env.NAME }}-stand.yaml'
          destination_repo: 'Hydrospheredata/hydro-serving-infrastructure'
          destination_branch: 'stage/dev'
          destination_folder: 'dev/apps/'
          user_email: 'robot@hydrosphere.io'
          user_name: 'hydrorobot'
          commit_message: 'Add ${{ env.NAME }} stand manifest'

  delete_stand:
    if: github.event.inputs.delete_stand == 'yes'
    name: Delete stand
    runs-on: ubuntu-20.04
    env:
      NAME: ${{ github.event.inputs.customer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2 
        with:
          repository: Hydrospheredata/hydro-serving-infrastructure
          ref: stage/dev
          token: ${{ secrets.HYDRO_SERVING_TOKEN }}
      
      - name: Extract date
        id: date
        shell: bash
        run: |
          DATE=$(date +"%Y-%m-%d")
          echo ::set-output name=date::$DATE

      - name: Move ${{ env.NAME }} App Manifest to Archive
        run: |
          git config --local http.extraheader "PRIVATE-TOKEN: ${{ secrets.HYDRO_SERVING_TOKEN }}"
          git config --local user.email "robot@hydrosphere.io"
          git config --local user.name "hydrorobot"
          git mv dev/apps/${{ env.NAME }}-stand.yaml dev/archive ${{ env.NAME }}-stand-${{ steps.date.outputs.date }}.yaml
          git add .
          git commit -m "Delete ${{ env.NAME }} stand manifest" -a --allow-empty
          git push
