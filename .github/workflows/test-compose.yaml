name: Test compose
on:
  workflow_dispatch:
    inputs:
      service_image_name:
        description: the service image to be updated
        required: true
        
      registry_url:
        description: the name of registry server
        required: true
        
      tag:
        description: version tag of the image
        required: true
      
      repository:
        description: GitHub repository that triggered this workflow
        required: true

      pr_number:
        description: pull request number
        required: true

env:
  containers_number: 14

jobs:
  compose_assemble:
    runs-on: ubuntu-latest
    
    name: Bump image tag
    
    steps:      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Bump image tag
        uses: ./.github/actions/update-merge-compose-action
        with:
          service_image_name: ${{ github.event.inputs.service_image_name }}
          registry_url: ${{ github.event.inputs.registry_url }}
          tag: ${{ github.event.inputs.tag }}

      - name: Upload docker-compose artifact
        uses: actions/upload-artifact@v2
        with:
          name: compose
          path: docker-compose.yaml

  ubuntu:
    needs: [ "compose_assemble" ]
    name: docker-compose on ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_version:
          - 18.09
          - 19.03
          - "20.10"
        docker_channel:
          - stable
    steps:
      - name: Download docker-compose artifact
        uses: actions/download-artifact@v2
        with:
          name: compose

      - uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: ${{ matrix.docker_version }}
          docker_channel: ${{ matrix.docker_channel }}
      
      - name: run docker-compose
        shell: bash
        run: |
          docker-compose up -d
          sleep 45s
      
      - name: check services
        shell: bash
        run: |
          if [ $(docker ps -q $1 | wc -l) != ${{ env.containers_number }} ]; then exit 1; fi
      
      - name: check logs of exited containers
        if: ${{ failure() }}
        shell: bash
        run: |
          docker ps -f "status=exited" -q | xargs -L 1 docker logs
      
      - name: close PR
        if: ${{ failure() }}
        uses: peter-evans/close-pull@v1
        with:
          token: ${{ secrets.HYDRO_SERVING_TOKEN }}
          repository: ${{ github.event.inputs.repository }}
          pull-request-number: ${{ github.event.inputs.pr_number }}
          comment: Closing pull request due to exited containers
          delete-branch: true

      - name: Stop containers
        if: ${{ always() }}
        shell: bash
        run: |
          docker ps -a
          docker-compose down 

  macos:
    needs: [ "compose_assemble" ]
    name: docker-compose on macos
    runs-on: macos-11
    steps: 
      - name: Download docker-compose artifact
        uses: actions/download-artifact@v2
        with:
          name: compose

      - uses: docker-practice/actions-setup-docker@master

      - name: Verify installation
        shell: bash
        run: |
          which docker
          which docker-compose

      - name: run docker-compose
        shell: bash
        run: |
          docker-compose up -d
          sleep 45s
      
      # +1 container due to buildx buildkit container
      - name: check services
        shell: bash
        run: |
          if [ $(docker ps -q $1 | wc -l) != $((${{ env.containers_number }} + 1)) ]; then exit 1; fi

      - name: check logs of exited containers
        if: ${{ failure() }}
        shell: bash
        run: |
          docker ps -f "status=exited" -q | xargs -L 1 docker logs
      
      - name: close PR
        if: ${{ failure() }}
        uses: peter-evans/close-pull@v1
        with:
          token: ${{ secrets.HYDRO_SERVING_TOKEN }}
          repository: ${{ github.event.inputs.repository }}
          pull-request-number: ${{ github.event.inputs.pr_number }}
          comment: Closing pull request due to exited containers
          delete-branch: true

      - name: Stop containers
        if: ${{ always() }}
        shell: bash
        run: |
          docker ps -a
          docker-compose down

  automerge:
    needs: [ "ubuntu", "macos" ]
    runs-on: ubuntu-latest
    steps:
      - name: automerge
        uses: "pascalgn/automerge-action@v0.14.3"
        env:
          GITHUB_TOKEN: "${{ secrets.HYDRO_SERVING_TOKEN }}"
          MERGE_LABELS: "automerge"
          MERGE_REMOVE_LABELS: "automerge"
          MERGE_COMMIT_MESSAGE: "pull-request-title"
          MERGE_RETRIES: "5"
          MERGE_METHOD: "squash"
          MERGE_DELETE_BRANCH: "true"
          PULL_REQUEST: ${{ github.event.inputs.repository }}/${{ github.event.inputs.pr_number }}
