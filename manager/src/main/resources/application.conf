akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  http.server.request-timeout = 60s

  // FIX FOR https://github.com/Hydrospheredata/hydro-serving/issues/44
  http.server.parsing.max-content-length = 200000000
  http.client.parsing.max-content-length = 200000000
}

sidecar {
  host = "localhost"
  port = 8080
}

application {
  port = 9090
  appId = "someId"
}

manager {
  advertisedHost = "localhost"
  advertisedPort = 9090
}

modelSources {
  local {
    name="local"
    path = "/models"
  }
  #s3{
  #  name="s3"
  #  path="/models"
  #  region="eu-west-1"
  #  bucket="serving-demo"
  #  queue="serving-s3-repo-queue"
  #}
}

cloudDriver {
  docker {
    networkName = "bridge"
  }
  #ecs {
  #  region = "eu-west-1"
  #  cluster = "hydro-ne-hydro"
  #  accountId = "060183668755"
  #}
}

dockerRepository{
  #type="local"
  #type="ecs"
}

openTracing{
  zipkin {
    enabled = false
    host = "zipkin"
    port = 9411
  }
}

database {
  jdbcUrl = "jdbc:postgresql://localhost:5432/docker"
  username = "docker"
  password = "docker"
  maximumPoolSize = 10
}
