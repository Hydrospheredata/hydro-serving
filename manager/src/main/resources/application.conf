akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  http.server.request-timeout = 60s

  // FIX FOR https://github.com/Hydrospheredata/hydro-serving/issues/44
  http.server.parsing.max-content-length = 200000000
  http.client.parsing.max-content-length = 200000000
}

sidecar {
  host = "localhost"
  ingressPort = 8080
  egressPort = 8081
  adminPort = 8082
}

application {
  port = 9090
  grpcPort = 9091
  shadowingOn = false
}

manager {
  advertisedHost = "localhost"
  advertisedPort = 8080
}

//localStorage {
//  path = "/models"
//}

cloudDriver {
  #docker {
  #  networkName = "bridge"
  #}
  #ecs {
  #  region = "eu-west-1"
  #  cluster = "hydro-ne-hydro"
  #  accountId = "060183668755"
  #  memoryReservation = 200
  #  logging = {
  #    driver = "awslogs"
  #  }
  #}
}

dockerRepository{
  type="local"
  #type="ecs"
}

openTracing{
  zipkin {
    enabled = false
    host = "zipkin"
    port = 9411
  }
}

metrics{
  #elastic{
  #  collectTimeout=30
  #  indexName=metrics
  #  mappingName=system
  #  clientUri=elasticsearch://somehost:9300TcpClient
  #}
  #influxDB{
  #  dataBaseName=metrics
  #  collectTimeout=30
  #  host=influxdb
  #  port=8086
  #}
}

database {
  jdbcUrl = "jdbc:postgresql://localhost:5432/docker"
  username = "docker"
  password = "docker"
  maximumPoolSize = 10
}
