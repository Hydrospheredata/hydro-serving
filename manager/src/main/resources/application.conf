akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  http.server.request-timeout = 60s

  // FIX FOR https://github.com/Hydrospheredata/hydro-serving/issues/44
  http.server.parsing.max-content-length = 200000000
  http.client.parsing.max-content-length = 200000000
}

sidecar {
  host = "localhost"
  ingress-port = 8080
  egress-port = 8081
  admin-port = 8082
}

application {
  port = 9090
  grpc-port = 9091
}

manager {
  advertised-host = "localhost"
  advertised-port = 8080
}

//local-storage {
//  path = "/models"
//}

cloud-driver {
  type = "local"
  //  type = "kubernetes"
  //  proxy-host = "localhost"
  //  proxy-port = 8001
  //  kube-namespace = "serving"

  // docker {
  //  network-name = "bridge"
  //}
  
  //  region = "eu-west-1"
  //  cluster = "hydro-ne-hydro"
  //  account-id = "060183668755"
  //  memory-reservation = 200
  //  internal-domain-name = "kek"
  //  vpc-id = "123"
  //  logging = {
  //    driver = "awslogs"
  //  }
  //
  //  monitoring {
  //    host = localhost
  //    port = 9998
  //    http-port = 9999
  //  }

  //  gateway {
  //    host = localhost
  //    port = 19091
  //    http-port = 19090
  //  }
 }

docker-repository {
   type = "local"

//  type="ecs"

//  type = "remote"
//  host = "docker.hydrosphere.io"
//  username = ""
//  password = ""
}

open-tracing {
  zipkin {
    enabled = false
    host = "zipkin"
    port = 9411
  }
}

metrics {
  //  elastic{
  //    collect-timeout=30
  //    index-name=metrics
  //    mapping-name=system
  //    client-uri=elasticsearch://somehost:9300TcpClient
  //  }
  //  influx-db{
  //    database-name=metrics
  //    collect-timeout=30
  //    host=influxdb
  //    port=8086
  //  }
}

database {
  jdbc-url = "jdbc:postgresql://localhost:5432/docker"
  username = "docker"
  password = "docker"
  maximum-pool-size = 10
}

runtime-pack.type = "all"