version: "2"
services:

  elasticsearch:
    image: elasticsearch:${es_version}
    container_name: elasticsearch
    ports:
      - "9200:9200"
    restart: always
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "transport.host=127.0.0.1"
    networks:
      - hydronet
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


  logstash:
    image: logstash:${logstash_version}
    container_name: logstash
    ports:
      - "5044:5044"
      - "12201:12201/udp"
    networks:
      hydronet:
        ipv4_address: 172.16.0.38
    restart: always
    volumes:
      - ./docker_monitoring_logging_alerting/logging/logstash/patterns:/opt/logstash/extra_patterns
      - ./docker_monitoring_logging_alerting/logging/logstash/config:/config
    depends_on:
      - elasticsearch
    command: logstash -f /config
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


  kibana:
    image: kibana:${kibana_version}
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - extnet
      - hydronet
    volumes:
      - ./docker_monitoring_logging_alerting/logging/kibana/config/:/opt/kibana/config/
    environment:
      - "NODE_OPTIONS=--max-old-space-size=200"
    depends_on:
      - elasticsearch
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


  zookeeper:
    image: confluent/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - hydronet
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201



  kafka:
    build: ./kafka
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - hydronet
    environment:
      - "KAFKA_JMX_HOSTNAME=kafka"
      - "KAFKA_ADVERTISED_HOST_NAME=kafka"
      - "KAFKA_AUTO_CREATE_TOPICS_ENABLE=true"
      - "ZOOKEEPER_IP=zookeeper"
    depends_on:
      - zookeeper
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201



  nodeexporter:
    image: prom/node-exporter:${nodeexporter_version}
    container_name: nodeexporter
    ports:
      - "9100:9100"
    networks:
      - hydronet
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201



  cadvisor:
    image: google/cadvisor:${cadvisor_version}
    container_name: cadvisor
    networks:
      - hydronet
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


  prometheus:
    build: ./prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - extnet
      - hydronet
    environment:
      - "MANAGER_PORT=8080"
      - "MANAGER_HOST=manager"
    depends_on:
      - kafka
      - cadvisor
      - nodeexporter
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./grafana:/mnt
    ports:
      - "3000:3000"
    networks:
      - extnet
      - hydronet
    environment:
      - "GF_SECURITY_ADMIN_PASSWORD=foobar"
      - "GF_USERS_ALLOW_SIGN_UP=false"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


  zipkin:
    image: openzipkin/zipkin:${zipkin_version}
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - extnet
      - hydronet
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


  postgres:
    image: postgres:${postgres_version}
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      - hydronet
    environment:
      - "POSTGRES_DB=docker"
      - "POSTGRES_USER=docker"
      - "OSTGRES_PASSWORD=docker"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201

  manager-ui:
    image: ${manager_ui_image}:${manager_ui_version}
    container_name: manager-ui
    ports:
      - "80:80"
    networks:
      - extnet
    environment:
      - "MANAGER_HOST=manager:8080"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


  manager:
    image: ${manager_image}:${manager_version}
    container_name: manager
    ports:
      - "8080:8080"
      - "8082:8082"
    networks:
      - extnet
      - hydronet
    environment:
      - "ZIPKIN_ENABLED=true"
      - "ZIPKIN_HOST=zipkin"
      - "ADVERTISED_MANAGER_HOST=manager"
      - "DATABASE_HOST=postgres"
      - "LOCAL_MODEL_PATH=/models"
      - "NETWORK_NAME=automation_hydronet"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./hydro-serving-runtime/models:/models
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201


networks:
  hydronet:
    external:
      name:  automation_hydronet

  extnet:
    driver: bridge
