ui:
  image:
    full: hydrosphere/hydro-serving-ui:3.0.0
manager:
  image:
    full: hydrosphere/serving-manager:3.0.0
  depconfig: |-
    default-deployment-configuration = """
      {
        "name":"default",
        "hpa":{
            "minReplicas":1,
            "maxReplicas":10,
            "cpuUtilization":80
        },
        "pod":{
          "tolerations":[{
                "key":"node-type",
                "operator":"Equal",
                "value":"demo",
                "effect":"NoSchedule"
          }]
        }
      }
    """
gateway:
  image:
    full: hydrosphere/serving-gateway:3.0.0
sonar:
  image:
    full: hydrosphere/sonar:3.0.0
visualization:
  image:
    full: hydrosphere/hydro-visualization:3.0.0
auto-od:
  image:
    full: hydrosphere/hydro-auto-od:3.0.0
stat:
  image:
    full: hydrosphere/hydro-stat:3.0.0
rootcause:
  image:
    full: hydrosphere/hydro-root-cause:3.0.0
global:
  ui:
    ingress:
      enabled: true
      host: "hydro-demo.dev.hydrosphere.io"
      grpchost: "hydro-grpc-demo.dev.hydrosphere.io"
  registry:
    insecure: false
    ingress:
      enabled: true
      host: "hydro-registry-demo.dev.hydrosphere.io"

  persistence:
    url: ""
    mode: "minio"
    region: "us-west-1" # region for s3

  mongodb:
    url: "" # Specify MongoDB connection string if you want to use an external MongoDB instance. 
            # If empty, an in-cluster deployment will be provisioned. 
    rootPassword: "hydr0s3rving" # Mongodb root password. Used for an internal installation.
    username: "root" # Mongodb username. Used for an internal installation.
    password: "hydr0s3rving" # Mongodb password. Used for an internal installation.
    authDatabase: "admin" # Mongodb auth database. Used for an internal installation.
    retry: "false"
    database: "hydro-serving-data-profiler" # Mongodb database name. Used for an internal installation.

  postgresql:
    url: "demohydrosphere.c6yzvjrvtrdu.eu-central-1.rds.amazonaws.com" # Specify Postgresql connection string if you want to use an external Postgresql instance. 
            # If empty, an in-cluster deployment will be provisioned.
    username: "postgres" # Postgresql username. Used for an internal installation.
    password: "hydr0s3rving" # Postgresql password. Used for an internal installation.
    database: "hydro-serving" # Postgresql database name. Used for an internal installation.

  alertmanager:
    url: "" # Prometheus AlertManager address in case you want to use the external installation.
            # If empty, an internal installation will be deployed.
    config:
      global: 
        smtp_smarthost: "smtp.gmail.com:587" # SMTP relay host
        smtp_auth_username: "alert@hydrosphere.io" # SMTP relay username 
        smtp_auth_identity: "alert" # SMTP relay username identity
        smtp_auth_password: "mailbot" # SMTP relay password
        smtp_from: "alert@hydrosphere.io" # Email address of the sender
      route:
        group_by: ["alertname", "modelVersionId"]
        group_wait: "10s"
        group_interval: "10s"
        repeat_interval: "1h"
        receiver: "default"
      receivers:
      - name: "default"
        email_configs: # List of email addresses to send alarms to
        - to: "alert@hydrosphere.io" 

  tolerations:
    - key: "node-type"
      operator: "Equal"
      value: "demo"
      effect: "NoSchedule"