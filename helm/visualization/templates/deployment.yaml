apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "visualization.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "visualization.name" . }}
    chart: {{ include "visualization.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "visualization.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "visualization.name" . }}
        release: {{ .Release.Name }}
        logging: "true"
    spec:
{{- if .Values.global.tolerations }}  
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}    
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.full }}"
          args: ['service']
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.service.grpcPort }}
              protocol: TCP
          env:
            - name: SERVICE_MODE
              value: service
            - name: APP_PORT
              value: {{ .Values.service.httpPort | quote }}
            - name: GRPC_PORT
              value: {{ .Values.service.grpcPort | quote }}
            - name: GRPC_PROXY_ADDRESS
              value: "{{ template "ui.fullname" . }}:9091"
            - name: HTTP_PROXY_ADDRESS
              value: "http://{{ template "ui.fullname" . }}:9090"
            - name: MONGO_URL
              value: {{ if .Values.global.mongodb.url }}"{{ .Values.global.mongodb.url }}"{{ else }} "{{ template "mongodb.fullname" . }}"{{ end }}  
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_DATABASE
              value: "{{ .Values.global.mongodb.database }}"
            {{- if .Values.global.mongodb.username }}
            - name: MONGO_USER
              value: "{{ .Values.global.mongodb.username }}"
            {{- end }}
            {{- if .Values.global.mongodb.password }}
            - name: MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "mongodb.fullname" . }}
                  key: mongodb-password
            {{- end }}
            {{- if .Values.global.mongodb.authDatabase }}
            - name: MONGO_AUTH_DB
              value: "{{ .Values.global.mongodb.authDatabase }}"
            {{- end }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-aws-secret"
                  key: "awsAccessKeyID"
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-aws-secret"
                  key: "awsSecretAccessKey"
            - name: AWS_BUCKET
              value: {{ .Values.persistence.bucket | default "hydrosphere-visualization-artifacts" }}
            - name: AWS_STORAGE_ENDPOINT
            {{- if .Values.global.persistence.url }}
              value: {{ .Values.global.persistence.url }}
            {{- else }}
              value: http://{{ template "minio.fullname" . }}:9000
            {{- end }}
            - name: AWS_REGION
              value: {{ include "visualization.region" . }}
          readinessProbe:
            httpGet:
              path: /visualization/health
              port: http
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /visualization/health
              port: http              
        - name: {{ .Chart.Name }}-worker
          image: "{{ .Values.image.full }}"
          args: ['worker']
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SERVICE_MODE
              value: worker
            - name: GRPC_PROXY_ADDRESS
              value: "{{ template "ui.fullname" . }}:9091"
            - name: HTTP_PROXY_ADDRESS
              value: "http://{{ template "ui.fullname" . }}:9090"
            - name: MONGO_URL
              value: {{ if .Values.global.mongodb.url }}"{{ .Values.global.mongodb.url }}"{{ else }} "{{ template "mongodb.fullname" . }}"{{ end }}  
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_DATABASE
              value: "{{ .Values.global.mongodb.database }}"
            {{- if .Values.global.mongodb.username }}
            - name: MONGO_USER
              value: "{{ .Values.global.mongodb.username }}"
            {{- end }}
            {{- if .Values.global.mongodb.password }}
            - name: MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "mongodb.fullname" . }}
                  key: mongodb-password
            {{- end }}
            {{- if .Values.global.mongodb.authDatabase }}
            - name: MONGO_AUTH_DB
              value: "{{ .Values.global.mongodb.authDatabase }}"
            {{- end }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-aws-secret"
                  key: "awsAccessKeyID"
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-aws-secret"
                  key: "awsSecretAccessKey"
            - name: AWS_BUCKET
              value: {{ .Values.persistence.bucket | default "hydrosphere-visualization-artifacts" }}
            - name: AWS_STORAGE_ENDPOINT
            {{- if .Values.global.persistence.url }}
              value: {{ .Values.global.persistence.url }}
            {{- else }}
              value: http://{{ template "minio.fullname" . }}:9000
            {{- end }}
            - name: AWS_REGION
              value: {{ include "visualization.region" . }}
          readinessProbe:
            httpGet:
              path: /visualization/health
              port: http
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /visualization/health
              port: http               
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort }}
              protocol: TCP
      imagePullSecrets:
        - name: "{{ .Release.Name }}-docker-secret"
